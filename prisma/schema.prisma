generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                      @id @default(autoincrement())
  full_name          String                   @db.VarChar(100)
  email              String                   @unique @db.VarChar(100)
  password           String                   @db.VarChar(255)
  role               Role                     @default(user)
  created_at         DateTime                 @default(now())
  is_verified        Boolean                  @default(false)
  verification_token String?                  @db.VarChar(255)
  sessions           Session[] // relation
  reactions          ChemicalReactionResult[] // relation to reaction results
  ExperimentStats    ExperimentStats[]
  userActivities     UserActivity[]
}

model Session {
  id            Int      @id @default(autoincrement())
  user_id       Int
  refresh_token String
  created_at    DateTime @default(now())

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model ChemicalReactionResult {
  id             Int      @id @default(autoincrement())
  user_id        Int
  formula        String   @db.VarChar(255)
  reaction_type  String   @db.VarChar(50)
  color_gradient String   @db.VarChar(100)
  temperature    Int
  observations   String   @db.Text
  created_at     DateTime @default(now())

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model ExperimentStats {
  id         Int      @id @default(autoincrement())
  user_id    Int
  exType     String   @db.VarChar(50)
  count      Int      @default(0)
  created_at DateTime @default(now())

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  @@unique([user_id, exType], name: "user_id_exType")
}

model UserActivity {
  id        Int      @id @default(autoincrement())
  user_id   Int      @unique   // ðŸ‘ˆ only one record per user
  totalTime Int      @default(0) // cumulative seconds
  updatedAt DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id])
}

enum Role {
  user
  admin
}
